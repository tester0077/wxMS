//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxMsUpdateCheck.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxMsUpdateCheckBase.h"


// Declare the bitmap loading function
extern void wxC7E76InitBitmapResources();

static bool bBitmapLoaded = false;


MyUpdateCheckBase::MyUpdateCheckBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC7E76InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer3 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer3);
    
    wxGridSizer* gridSizer5 = new wxGridSizer(0, 2, 0, 0);
    
    boxSizer3->Add(gridSizer5, 0, wxTOP, 5);
    
    m_staticText25 = new wxStaticText(this, wxID_ANY, _("Static Text Label"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    gridSizer5->Add(m_staticText25, 0, wxALL, 5);
    
    m_staticTextLatest = new wxStaticText(this, wxID_ANY, _("You are using the latest version"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    gridSizer5->Add(m_staticTextLatest, 0, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_staticTextVisit = new wxStaticText(this, wxID_ANY, _("\nFor more information, please\nvisit the Software link at:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    gridSizer5->Add(m_staticTextVisit, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_hyperLinkUpdateURL = new wxHyperlinkCtrl(this, wxID_ANY, _("Columbinehoney.net"), wxT("http://www.columbinehoney.net/"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    m_hyperLinkUpdateURL->SetNormalColour(wxColour(wxT("#0000FF")));
    m_hyperLinkUpdateURL->SetHoverColour(wxColour(wxT("#0000FF")));
    m_hyperLinkUpdateURL->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    gridSizer5->Add(m_hyperLinkUpdateURL, 0, wxTOP|wxALIGN_CENTER_VERTICAL, 5);
    
    wxBoxSizer* boxSizer15 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer3->Add(boxSizer15, 0, wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_staticTextNote1 = new wxStaticText(this, wxID_ANY, _("Automatic checking for updates at startup can be"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer15->Add(m_staticTextNote1, 0, wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_staticTextNote2 = new wxStaticText(this, wxID_ANY, _("enabled or disabled in the 'Options' dialog."), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer15->Add(m_staticTextNote2, 0, wxBOTTOM|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_stdBtnSizer21 = new wxStdDialogButtonSizer();
    
    boxSizer3->Add(m_stdBtnSizer21, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    m_button23 = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxSize(-1, -1), 0);
    m_stdBtnSizer21->AddButton(m_button23);
    m_stdBtnSizer21->Realize();
    
    SetName(wxT("MyUpdateCheckBase"));
    SetSizeHints(500,300);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    CentreOnParent(wxBOTH);
}

MyUpdateCheckBase::~MyUpdateCheckBase()
{
}
