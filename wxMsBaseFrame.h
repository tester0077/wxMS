//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxMs-Curl.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _HUMMERSVN_WXMS_CURL_WXMS_CURL_BASE_CLASSES_H
#define _HUMMERSVN_WXMS_CURL_WXMS_CURL_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/gauge.h>
#include <wx/splitter.h>
#include <wx/panel.h>
#include <wx/grid.h>
#include <wx/textctrl.h>
#include <wx/statusbr.h>
#include <wx/dialog.h>
#include <wx/button.h>
#include <wx/statbox.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/stattext.h>
#include <wx/checkbox.h>
#include <wx/statline.h>
#include <wx/hyperlink.h>
#include <wx/html/htmlwin.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class MyFrameBase : public wxFrame
{
public:
    enum {
        wxID_CHECK_MAIL = 10001,
        wxID_LOG_CLEAR = 10002,
        wxID_LOG_SHOW = 10003,
        wxID_LOG_WINDOW = 10004,
        wxID_MENU_ADD_BLACK_DOMAIN = 10005,
        wxID_MENU_ADD_BLACK_LIST = 10006,
        wxID_MENU_ADD_FRIENDS = 10007,
        wxID_MENU_ADD_FRIEND_DOMAIN = 10008,
        wxID_MENU_CLEAR_LIST = 10009,
        wxID_MENU_CLEAR_MARK_ALL_BOUNCE = 10010,
        wxID_MENU_CLEAR_MARK_ALL_DELETE = 10011,
        wxID_MENU_DELETE_MSG = 10012,
        wxID_MENU_LAUNCH_MAIL_APP = 10013,
        wxID_MENU_MARK_ALL_BOUNCE = 10014,
        wxID_MENU_MARK_ALL_DELETE = 10015,
        wxID_MENU_MARK_BOUNCE = 10016,
        wxID_MENU_MARK_DELETE = 10017,
        wxID_MENU_PREVIEW_MSG = 10018,
        wxID_OPEN_MAIL_CLIENT = 10019,
        wxID_OPTION_SETUP = 10020,
        wxID_PROCESS_MAIL = 10021,
        wxID_TOOL_RUN_UT = 10022,
    };
protected:
    wxMenuBar* m_menubarMain;
    wxMenu* m_menuFile;
    wxMenuItem* m_menuItemCheck4Mail;
    wxMenuItem* m_menuItemProcessMail;
    wxMenuItem* m_menuItemLaunchMailApp;
    wxMenuItem* menuItemFileExit;
    wxMenu* m_menuEmail;
    wxMenuItem* m_menuEmailFriendsListAddr;
    wxMenuItem* m_menuEmailAddFriendsDomain;
    wxMenuItem* m_menuEmailBlackListAddr;
    wxMenuItem* m_menuEmailAddBlackDomain;
    wxMenuItem* m_separator1;
    wxMenuItem* m_menuEmailMarkDelete;
    wxMenuItem* m_menuEmailMarkBounce;
    wxMenuItem* m_menuItem215;
    wxMenuItem* m_menuItemEmailDelete;
    wxMenuItem* m_separator2;
    wxMenuItem* m_menuEmailPreview;
    wxMenuItem* m_separator3;
    wxMenuItem* m_menuEmailMarkTolDeleteAll;
    wxMenuItem* m_menuEmailMarkBounceAll;
    wxMenuItem* m_separator4;
    wxMenuItem* m_menuItemUnmarkAllDelete;
    wxMenuItem* m_menuItemClearAllBounce;
    wxMenuItem* m_menuItem239;
    wxMenuItem* m_menuEmailClearList;
    wxMenu* m_menuOptions;
    wxMenuItem* m_menuItemOptionsSetup;
    wxMenuItem* m_menuToolsAccounts;
    wxMenuItem* m_menuItemFilters;
    wxMenuItem* m_separator5;
    wxMenuItem* m_menuItemLogShow;
    wxMenuItem* m_menuItemLogClear;
    wxMenuItem* m_menuItem205;
    wxMenuItem* m_menuItemRunUT;
    wxMenu* m_menuTools;
    wxMenuItem* m_menuToolsCheckNew;
    wxMenuItem* m_menuItemToolStop;
    wxMenuItem* m_separator6;
    wxMenuItem* m_menuBlackFriendsList;
    wxMenuItem* m_menuFilters;
    wxMenu* m_menuCrash;
    wxMenuItem* m_menuItemCrashException;
    wxMenu* m_menuHelp;
    wxMenuItem* m_menuItemHelpHelp;
    wxMenuItem* m_menuItemCheck4Update;
    wxMenuItem* m_menuItemAbout;
    wxToolBar* m_toolBarMain;
    wxGauge* m_gaugeProgress;
    wxSplitterWindow* m_splitterMain;
    wxPanel* m_splitterPageMail;
    wxGrid* m_gridMail;
    wxPanel* m_splitterPageFeedback;
    wxTextCtrl* m_textCtrlLog;
    wxStatusBar* m_statusBarMain;

protected:
    virtual void OnMailGridChar(wxKeyEvent& event) { event.Skip(); }
    virtual void OnCheck4NewMail(wxCommandEvent& event) { event.Skip(); }
    virtual void OnProcessMail(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiProcessMail(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnLaunchMailClient(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiLaunchMailApp(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddToFriendsList(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiFriendsListAddr(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddToFriendsDomains(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiFriendsListDom(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddToBlackList(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiBlackListAddr(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnAddToBlackDomains(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiBlackListDom(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMarkToDeleteSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMarkDelete(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMarkToBounceSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMarkBounce(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEmailDelMessage(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiEmailDelete(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEmailPreview(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiPreview(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMarkToDeleteAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMarkDeleteAll(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMarkToBounceAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMarkBounceAll(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClearAllDelete(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiClearAllDelete(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClearAllBounce(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiClearAllBounce(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClearList(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiClearList(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOptionsSetupDlg(wxCommandEvent& event) { event.Skip(); }
    virtual void OnMenuAccounts(wxCommandEvent& event) { event.Skip(); }
    virtual void OnMenuFilters(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptionsLogShow(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiLogShow(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOptionsLogClear(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiLogClear(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUiCheckNew(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUiToolsCheckMsgs(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMailCheckStop(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiToolsStop(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnLists(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiToolsBlackFriendsList(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCauseException(wxCommandEvent& event) { event.Skip(); }
    virtual void OnShowHelpContents(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIHelpMenu(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCheck4Update(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMailCheckStart(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMailCheckStop(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMenuShowHelpContents(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIHelpToolbar(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMailGridSize(wxSizeEvent& event) { event.Skip(); }
    virtual void OnMailGridCellLeftClick(wxGridEvent& event) { event.Skip(); }
    virtual void OnMailGridRightClick(wxMouseEvent& event) { event.Skip(); }
    virtual void OnMailGridRightClick(wxGridEvent& event) { event.Skip(); }
    virtual void OnMailGridCellChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnMailGridEditorShown(wxGridEvent& event) { event.Skip(); }
    virtual void OnMailGridCellChanging(wxGridEvent& event) { event.Skip(); }
    virtual void OnMailGridMouseWheel(wxMouseEvent& event) { event.Skip(); }

public:
    wxMenuBar* GetMenubarMain() { return m_menubarMain; }
    wxGauge* GetGaugeProgress() { return m_gaugeProgress; }
    wxToolBar* GetToolBarMain() { return m_toolBarMain; }
    wxGrid* GetGridMail() { return m_gridMail; }
    wxPanel* GetSplitterPageMail() { return m_splitterPageMail; }
    wxTextCtrl* GetTextCtrlLog() { return m_textCtrlLog; }
    wxPanel* GetSplitterPageFeedback() { return m_splitterPageFeedback; }
    wxSplitterWindow* GetSplitterMain() { return m_splitterMain; }
    wxStatusBar* GetStatusBarMain() { return m_statusBarMain; }
    MyFrameBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("%s - %s - Version %d.%d - Build: %d"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_FRAME_STYLE|wxTAB_TRAVERSAL);
    virtual ~MyFrameBase();
};


class MyBaseAccountsDialog : public wxDialog
{
public:
    enum {
        wxID_BUTTON_ACCOUNT_ADD = 10001,
    };
protected:
    wxGrid* m_gridMailAccounts;
    wxButton* m_buttonAdd;
    wxButton* m_buttonEdit;
    wxButton* m_buttonDelete;
    wxButton* m_buttonImport;
    wxStdDialogButtonSizer* m_sdbSizer1;
    wxButton* m_buttonAcctOK;
    wxButton* m_buttonAcctCancel;

protected:
    virtual void OnAccountSelect(wxGridEvent& event) { event.Skip(); }
    virtual void OnAccountGridSize(wxSizeEvent& event) { event.Skip(); }
    virtual void OnAccountAdd(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAccountEdit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAccountDelete(wxCommandEvent& event) { event.Skip(); }

public:
    wxGrid* GetGridMailAccounts() { return m_gridMailAccounts; }
    wxButton* GetButtonAdd() { return m_buttonAdd; }
    wxButton* GetButtonEdit() { return m_buttonEdit; }
    wxButton* GetButtonDelete() { return m_buttonDelete; }
    wxButton* GetButtonImport() { return m_buttonImport; }
    MyBaseAccountsDialog(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Mail Accounts"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~MyBaseAccountsDialog();
};


class MyBaseAccountsDetailsDialog : public wxDialog
{
protected:
    wxTextCtrl* m_textCtrlAccountName;
    wxNotebook* m_notebookAcctDetails;
    wxPanel* m_panelIncomingMail;
    wxStaticText* m_staticTextServerAddressLabel;
    wxTextCtrl* m_textCtrlPop3ServerUrl;
    wxStaticText* m_staticTextUserNameLabel;
    wxTextCtrl* m_textCtrlUserName;
    wxStaticText* m_staticTextPasswordLabel;
    wxTextCtrl* m_textCtrlPassword;
    wxStaticText* m_staticText1315;
    wxCheckBox* m_checkBoxRememberPW;
    wxStaticText* m_staticText14119;
    wxButton* m_buttonAdvPop3Config;
    wxButton* m_buttonTestPop3Server;
    wxStaticText* m_staticTextTestResult;
    wxPanel* m_panelOutgoingMail;
    wxCheckBox* m_checkBoxAllowBounce23;
    wxStaticText* m_staticText925;
    wxStaticText* m_staticText827;
    wxStaticText* m_staticText10129;
    wxTextCtrl* m_textCtrl6130;
    wxStaticLine* m_staticline231;
    wxStaticText* m_staticTextBounceSMTPAddress32;
    wxStaticText* m_staticText12134;
    wxTextCtrl* m_textCtrl7135;
    wxStaticText* m_staticText13137;
    wxButton* m_buttonAdvanceBounceOptions38;
    wxStdDialogButtonSizer* m_sdbSizer6;
    wxButton* m_button226;
    wxButton* m_button227;
    wxButton* m_button228;

protected:
    virtual void OnAdvancedPopConfig(wxCommandEvent& event) { event.Skip(); }
    virtual void OnMailServerTest(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetTextCtrlAccountName() { return m_textCtrlAccountName; }
    wxStaticText* GetStaticTextServerAddressLabel() { return m_staticTextServerAddressLabel; }
    wxTextCtrl* GetTextCtrlPop3ServerUrl() { return m_textCtrlPop3ServerUrl; }
    wxStaticText* GetStaticTextUserNameLabel() { return m_staticTextUserNameLabel; }
    wxTextCtrl* GetTextCtrlUserName() { return m_textCtrlUserName; }
    wxStaticText* GetStaticTextPasswordLabel() { return m_staticTextPasswordLabel; }
    wxTextCtrl* GetTextCtrlPassword() { return m_textCtrlPassword; }
    wxStaticText* GetStaticText1315() { return m_staticText1315; }
    wxCheckBox* GetCheckBoxRememberPW() { return m_checkBoxRememberPW; }
    wxStaticText* GetStaticText14119() { return m_staticText14119; }
    wxButton* GetButtonAdvPop3Config() { return m_buttonAdvPop3Config; }
    wxButton* GetButtonTestPop3Server() { return m_buttonTestPop3Server; }
    wxStaticText* GetStaticTextTestResult() { return m_staticTextTestResult; }
    wxPanel* GetPanelIncomingMail() { return m_panelIncomingMail; }
    wxCheckBox* GetCheckBoxAllowBounce23() { return m_checkBoxAllowBounce23; }
    wxStaticText* GetStaticText925() { return m_staticText925; }
    wxStaticText* GetStaticText827() { return m_staticText827; }
    wxStaticText* GetStaticText10129() { return m_staticText10129; }
    wxTextCtrl* GetTextCtrl6130() { return m_textCtrl6130; }
    wxStaticLine* GetStaticline231() { return m_staticline231; }
    wxStaticText* GetStaticTextBounceSMTPAddress32() { return m_staticTextBounceSMTPAddress32; }
    wxStaticText* GetStaticText12134() { return m_staticText12134; }
    wxTextCtrl* GetTextCtrl7135() { return m_textCtrl7135; }
    wxStaticText* GetStaticText13137() { return m_staticText13137; }
    wxButton* GetButtonAdvanceBounceOptions38() { return m_buttonAdvanceBounceOptions38; }
    wxPanel* GetPanelOutgoingMail() { return m_panelOutgoingMail; }
    wxNotebook* GetNotebookAcctDetails() { return m_notebookAcctDetails; }
    MyBaseAccountsDetailsDialog(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Details for a POP3/SMTP Account"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~MyBaseAccountsDetailsDialog();
};


class MyDialogUpdate : public wxDialog
{
protected:
    wxStaticText* m_staticTextVersion;
    wxStaticText* m_staticText255;
    wxHyperlinkCtrl* m_hyperlinkwxMS;
    wxStaticText* m_staticText259;
    wxStaticText* m_staticText261;
    wxStaticLine* m_staticLine263;
    wxStaticText* m_staticText265;
    wxStaticText* m_staticText267;
    wxStdDialogButtonSizer* m_stdBtnSizer269;
    wxButton* m_button271;

protected:

public:
    wxStaticText* GetStaticTextVersion() { return m_staticTextVersion; }
    wxStaticText* GetStaticText255() { return m_staticText255; }
    wxHyperlinkCtrl* GetHyperlinkwxMS() { return m_hyperlinkwxMS; }
    wxStaticText* GetStaticText259() { return m_staticText259; }
    wxStaticText* GetStaticText261() { return m_staticText261; }
    wxStaticLine* GetStaticLine263() { return m_staticLine263; }
    wxStaticText* GetStaticText265() { return m_staticText265; }
    wxStaticText* GetStaticText267() { return m_staticText267; }
    MyDialogUpdate(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Update Check"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(333,239), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~MyDialogUpdate();
};


class wxMsMessagePreviewBase : public wxDialog
{
protected:
    wxStaticText* m_staticTextLabelFrom;
    wxStaticText* m_staticTextDataFrom;
    wxStaticText* m_staticTextLabelDate;
    wxStaticText* m_staticTextDataDate;
    wxStaticText* m_staticTextLabelTo;
    wxStaticText* m_staticTextDataTo;
    wxStaticText* m_staticTextLabelSubject;
    wxStaticText* m_staticTextDataSubject;
    wxStaticText* m_staticTextLabelAttachments;
    wxStaticText* m_staticTextAttachments;
    wxStaticText* m_staticTextLabelMsgType;
    wxStaticText* m_staticTextMsgType;
    wxNotebook* m_notebookMessagePreview;
    wxPanel* m_panelMessageText;
    wxTextCtrl* m_textCtrlMessage;
    wxPanel* m_panelMessageHtml;
    wxHtmlWindow* m_htmlWinHtml;
    wxPanel* m_panelMessageSource;
    wxTextCtrl* m_textCtrlMessageSource;
    wxButton* m_buttonSaveMimeSource2File;
    wxPanel* m_panelMimeStructure;
    wxTextCtrl* m_textCtrlMimeStructure;
    wxStdDialogButtonSizer* m_stdBtnSizer319;
    wxButton* m_button321;

protected:
    virtual void OnSaveMimeSource2File(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticTextLabelFrom() { return m_staticTextLabelFrom; }
    wxStaticText* GetStaticTextDataFrom() { return m_staticTextDataFrom; }
    wxStaticText* GetStaticTextLabelDate() { return m_staticTextLabelDate; }
    wxStaticText* GetStaticTextDataDate() { return m_staticTextDataDate; }
    wxStaticText* GetStaticTextLabelTo() { return m_staticTextLabelTo; }
    wxStaticText* GetStaticTextDataTo() { return m_staticTextDataTo; }
    wxStaticText* GetStaticTextLabelSubject() { return m_staticTextLabelSubject; }
    wxStaticText* GetStaticTextDataSubject() { return m_staticTextDataSubject; }
    wxStaticText* GetStaticTextLabelAttachments() { return m_staticTextLabelAttachments; }
    wxStaticText* GetStaticTextAttachments() { return m_staticTextAttachments; }
    wxStaticText* GetStaticTextLabelMsgType() { return m_staticTextLabelMsgType; }
    wxStaticText* GetStaticTextMsgType() { return m_staticTextMsgType; }
    wxTextCtrl* GetTextCtrlMessage() { return m_textCtrlMessage; }
    wxPanel* GetPanelMessageText() { return m_panelMessageText; }
    wxHtmlWindow* GetHtmlWinHtml() { return m_htmlWinHtml; }
    wxPanel* GetPanelMessageHtml() { return m_panelMessageHtml; }
    wxTextCtrl* GetTextCtrlMessageSource() { return m_textCtrlMessageSource; }
    wxButton* GetButtonSaveMimeSource2File() { return m_buttonSaveMimeSource2File; }
    wxPanel* GetPanelMessageSource() { return m_panelMessageSource; }
    wxTextCtrl* GetTextCtrlMimeStructure() { return m_textCtrlMimeStructure; }
    wxPanel* GetPanelMimeStructure() { return m_panelMimeStructure; }
    wxNotebook* GetNotebookMessagePreview() { return m_notebookMessagePreview; }
    wxMsMessagePreviewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Message Preview"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~wxMsMessagePreviewBase();
};


class MyBaseAdvancedPopConfigDlg : public wxDialog
{
protected:
    wxCheckBox* m_checkBoxUseDefaultPort;
    wxTextCtrl* m_textCtrlServerPort;
    wxStdDialogButtonSizer* m_sdbSizer62;
    wxButton* m_button2263;
    wxButton* m_button2274;
    wxButton* m_button2285;

protected:

public:
    wxCheckBox* GetCheckBoxUseDefaultPort() { return m_checkBoxUseDefaultPort; }
    wxTextCtrl* GetTextCtrlServerPort() { return m_textCtrlServerPort; }
    MyBaseAdvancedPopConfigDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("MyBaseAdvancedPopConfig"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~MyBaseAdvancedPopConfigDlg();
};


class wxMsBasePasswordPromptDlg : public wxDialog
{
protected:
    wxStaticText* m_staticTextPwServerLabel;
    wxStaticText* m_staticTextPwServer;
    wxStaticText* m_staticTextPwUserNameLabel;
    wxStaticText* m_staticTextPwUserName;
    wxStaticText* m_staticTextPwPasswordLabel;
    wxTextCtrl* m_textCtrlPassword;
    wxStdDialogButtonSizer* m_stdBtnSizer433;
    wxButton* m_button435;
    wxButton* m_button437;

protected:

public:
    wxStaticText* GetStaticTextPwServerLabel() { return m_staticTextPwServerLabel; }
    wxStaticText* GetStaticTextPwServer() { return m_staticTextPwServer; }
    wxStaticText* GetStaticTextPwUserNameLabel() { return m_staticTextPwUserNameLabel; }
    wxStaticText* GetStaticTextPwUserName() { return m_staticTextPwUserName; }
    wxStaticText* GetStaticTextPwPasswordLabel() { return m_staticTextPwPasswordLabel; }
    wxTextCtrl* GetTextCtrlPassword() { return m_textCtrlPassword; }
    wxMsBasePasswordPromptDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Password"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~wxMsBasePasswordPromptDlg();
};

#endif
